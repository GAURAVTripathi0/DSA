You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 

//code 
class Solution {
public:
    int climbStairs(int n) {
        if(n<=1) return 1;
        vector<int> dp(n+1);
        

        dp[0] = 1;
        dp[1] = 1;

        for(int i=2;i<=n;++i){
            dp[i] = dp[i-1]+dp[i-2];

        }
        return dp[n];
    }
};


//short version 
class Solution {
public:
    int climbStairs(int n) {
        if (n <= 1) return 1;
        int prev1 = 1, prev2 = 1, curr;
        for (int i = 2; i <= n; ++i) {
            curr = prev1 + prev2;
            prev2 = prev1;
            prev1 = curr;
        }
        return curr;
    }
};
